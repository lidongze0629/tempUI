<!--header-->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <!-- Meta, title, CSS, favicons, etc. -->
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>GRAPE Online</title>

  <!-- Bootstrap -->
  <link href="/vendors/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link href="/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet">
  <!-- NProgress -->
  <link href="/vendors/nprogress/nprogress.css" rel="stylesheet">
  <!-- iCheck -->
  <link href="/vendors/iCheck/skins/flat/green.css" rel="stylesheet">

  <!-- Custom Theme Style -->
  <link href="/build/css/custom.css" rel="stylesheet">
</head>

<body class="nav-md">
  <div class="container body">
    <div class="main_container">
      <div class="col-md-3 left_col">
        <div class="left_col scroll-view">
          <div class="navbar nav_title" style="border: 0;">
            <a href="index.html" class="site_title"><span>GRAPE</span></a>
          </div>

          <div class="clearfix"></div>

          <!-- sidebar menu -->
          <div id="sidebar-menu" class="main_menu_side hidden-print main_menu">
            <div class="menu_section">
              <ul class="nav side-menu">
                <li><a href="grape-running?if_waiting=0"><i class="fa fa-home"></i> Processing</span></a></li>
                <li><a href="grape-plug"><i class="fa fa-plug"></i> Plug</span></a></li>
                <!-- <li><a href="grape-running-communication"><i class="fa fa-home"></i>Running-communication</a></li> -->
                <li><a href="grape-cluster"><i class="fa fa-server"></i>Clusters</a></li>
                <li><a href="grape-queries"><i class="fa fa-home"></i>Queries</a></li>
                <li><a href="grape-instances"><i class="fa fa-home"></i>Jobs</a></li>
                <!-- <li><a href="grape-single-query"><i class="fa fa-line-chart"></i>Performance</a></li> -->
              </ul>
            </div>


          </div>
          <!-- /sidebar menu -->

        </div>
      </div>
      <!--headerend-->
      <!-- page content -->
      <div class="right_col" role="main">
        <div class="page-title">
          <div class="title_left">
            <h3>Paralleling Sequential Algorithms
                            <!-- <small>a detail page for single job</small> -->
                        </h3>
          </div>
        </div>

        <!-- running head -->
        <div class="row x_panel tile y_running_nav">
          <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="y_proc_block">
              <div class="y_proc_block_center">
                <!-- <div class="y_title">Processing</div> -->
                <div class="y_proc_sec col-md-5 col-sm-5 col-xs-5">
                  <div class="y_proc_bg">
                    Plug
                  </div>
                </div>
                <div class="y_proc_sec col-md-2 col-sm-2 col-xs-2">
                  <div class="y_proc_bg">
                    Play
                  </div>
                </div>
                <div class="y_proc_sec col-md-5 col-sm-5 col-xs-5">
                  <div class="y_proc_bg">
                    Analytics
                  </div>
                </div>
                <div class="clearfix"></div>
              </div>
            </div>
            <div class="y_proc_overlay">
              <div class="y_proc_block_center y_proc_flow">
                <div class="col-md-3 col-sm-3 col-xs-3">
                  <div class="y_flow_box y_flow_half active">
                    <a href="#"><i class="fa fa-plug"></i>Plug Algorithm</a>
                  </div>
                  <div class="yarrows"></div>
                  <div class="y_flow_box y_flow_half">
                    <a href="#"><i class="fa fa-refresh"></i>Load Graph Data</a>
                  </div>
                  <div class="yarrows"></div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-6">
                  <div class="y_flow_box y_flow_cluster">
                  </div>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-3">

                  <div class="y_flow_box y_flow_half_r">
                    <a href="/grape-single-query?sessionID=<%=sessionID%>" id="performance"><i class="fa fa-line-chart"></i>Performance</a>
                  </div>
                  <div class="yarrows r"></div>

                  <div class="y_flow_box y_flow_half_r">
                    <a href="/grape-result?sessionID=<%=sessionID%>&algo=<%=algo%>" id="result"><i class="fa fa-list"></i>Result</a>
                  </div>
                  <div class="yarrows r"></div>
                </div>
                <div class="clearfix"></div>
              </div>
            </div>
          </div>
          <div class="clearfix"></div>
        </div>

        <div class="row y_running_expend">
          <div class="col-md-6 col-sm-6 col-xs-12">
            <div class="x_panel">
              <div class="x_title">
                <!-- TODO @jzxy, make the cluster static loading, without animation. -->
                <h2>Processing </h2>
                <img src="images/play.png" id="start_pause" height="30px" width="30px" alt="play" style="margin:0px 10px 0px" onclick='start()' />
                <img src="images/restart.png" id="restart" height="30px" width="30px" alt="restart" style="margin:0px 10px 0px" onclick="restart1()" />
                <select name="speed" id="speed">
                                        <option value="250">250ms</option>
                                        <option value="500">500ms</option>
                                        <option value="750">750ms</option>
                                        <option value="1000">1000ms</option>
                                        <option value="1250">1250ms</option>
                                        <option selected="selected" value="1500">1500ms</option>
                                        <option value="1750">1750ms</option>
                                        <option value="2000">2000ms</option>
                                </select>
                <ul class="nav navbar-right panel_toolbox">
                  <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                  </li>
                  <li><a class="close-link"><i class="fa fa-close"></i></a>
                  </li>
                </ul>
                <div class="clearfix"></div>
              </div>
              <div class="x_content" style="overflow:auto;">
                <style>
                  .node {
                    stroke-width: 1.5px;
                    fill: black;
                  }

                  .link {
                    fill: none;
                    stroke-width: 1px;
                  }
                </style>
                <!-- FIXME yangboming, now is 400, but should be 100%;. -->
                <% var diameter =workerNum*100/3.1415 %>
                  <svg width="<%=diameter+250 %>" height="<%=diameter+250 %>"></svg>
                  <script src="/js/d3.v4.js"></script>
                  <script src="../vendors/jquery/dist/jquery.min.js"></script>
                  <script>
                    var node_index = 0

                    //sleep function
                    var svg = d3.select("svg"),
                      // FIXME: then the width cannot by getting width of svn, since 100% not number, throws NaN(not a num)
                      width = +svg.attr("width"),
                      height = +svg.attr("height");

                    var color = d3.scaleOrdinal(d3.schemeCategory20);

                    var simulation = d3.forceSimulation()
                      .force("center", d3.forceCenter(<%= diameter/2+100 %>, <%= diameter/2 + 100%>));
                    // @jzxy, notes how to load different worker file.
                    // TODO @jzxy: replace /demo_data with the global configured value in server.js
                    d3.json("/demo_data/<%=workerNum %>_workers.json", function(error, graph) {
                      if (error) throw error;
                      var time = 1000;
                      var nodes = graph.nodes.map(function(d) {
                          return {
                            'x': d.x,
                            'y': d.y,
                            'fixed': true,
                            'id': d.id
                          }
                        }),
                        nodeById = d3.map(nodes, function(d) {
                          return d.id;
                        }),
                        links = graph.links,
                        bilinks = [];

                      links.forEach(function(link) {
                        var s = link.source = nodeById.get(link.source),
                          t = link.target = nodeById.get(link.target),
                          i = {}; // intermediate node
                        nodes.push(i);
                        links.push({
                          source: s,
                          target: i
                        }, {
                          source: i,
                          target: t
                        });
                        bilinks.push([s, i, t]);
                      });


                      var link = svg.selectAll(".link")
                        .data(bilinks)
                        .enter().append("path")
                        .attr("class", "link");

                      svg.selectAll(".link")
                        .attr("stroke", "#bbb");
                      /*svg.selectAll(".link")
											.attr("stroke",function(d,i){
                                                if(send_inform[d[0].id][d[2].id]==1){
                                                    return "#DC143C"
                                                }else
                                                    return "#bbb"
                                            });*/


                      var node = svg.selectAll(".node")
                        .data(nodes.filter(function(d) {
                          return d.id;
                        }))
                        .enter().append("g")
                        .attr("class", "node")
                        .attr("fixed", true)
                        .on("click", function(d) {
                          location.href = "/grape-running-fragment?dataset=<%=dataset%>&sessionID=<%=sessionID%>&workerNum=<%=workerNum %>&workerId=" + d.id;
                        });


                      node.append("image")
                        .attr("xlink:href", "/images/worker.png")
                        .attr("x", -25)
                        .attr("y", -25)
                        .attr("height", 50)
                        .attr("width", 50);

                      node.append("text")
                        .attr("dy", "6")
                        .attr("dx", "30")
                        .attr("text-anchor", "start")
                        .text(function(d) {
                          var temp_id = d.id
                          return "Worker_" + d.id
                        });

                      simulation
                        .nodes(nodes)
                        .on("tick", ticked);


                      function ticked() {
                        link.attr("d", positionLink);
                        node.attr("transform", positionNode);
                      }
                    });


                    /////////////////////////////////////////////////////////////////////////

                    function positionLink(d) {
                      return "M" + d[0].x + "," + d[0].y + " " + d[2].x + "," + d[2].y;
                    }

                    function positionNode(d) {
                      return "translate(" + d.x + "," + d.y + ")";
                    }

                    function transition(node_index = 0) {

                    }

                    function HSVtoHEX(h, s, v) {
                      var r, g, b, i, f, p, q, t;
                      if (arguments.length === 1) {
                        s = h.s, v = h.v, h = h.h;
                      }
                      i = Math.floor(h * 6);
                      f = h * 6 - i;
                      p = v * (1 - s);
                      q = v * (1 - f * s);
                      t = v * (1 - (1 - f) * s);
                      switch (i % 6) {
                        case 0:
                          r = v, g = t, b = p;
                          break;
                        case 1:
                          r = q, g = v, b = p;
                          break;
                        case 2:
                          r = p, g = v, b = t;
                          break;
                        case 3:
                          r = p, g = q, b = v;
                          break;
                        case 4:
                          r = t, g = p, b = v;
                          break;
                        case 5:
                          r = v, g = p, b = q;
                          break;
                      }
                      var hex = "#"
                      hex += ("0" + Number(r).toString(16)).slice(-2);
                      hex += ("0" + Number(g).toString(16)).slice(-2);
                      hex += ("0" + Number(b).toString(16)).slice(-2);

                    }
                    // Returns an attrTween for translating along the specified path element.
                    function translateAlong(path) {
                      var l = path.getTotalLength();
                      return function(d, i, a) {
                        return function(t) {
                          var p = path.getPointAtLength(t * l);
                          return "translate(" + p.x + "," + p.y + ")";
                        };
                      };
                    }
                  </script>
              </div>
            </div>
          </div>
          <!-- /running head -->
          <!-- </div> -->



          <div class="col-md-6 col-sm-6 col-xs-12" id="scroll" style="height:487px; overflow:auto">
            <div class="x_panel y_console">
              <div class="x_title">
                <h2>Cluster Console<small></small></h2>
                <ul class="nav navbar-right panel_toolbox">
                  <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                  </li>
                  <li><a class="close-link"><i class="fa fa-close"></i></a>
                  </li>
                </ul>
                <div class="clearfix"></div>
              </div>

              <div class="x_content running-log">
                <p id="console_log">loading log file .....</p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- /page content -->
      <!--footer-->
      <!-- footer content -->
      <footer>
        <div class="pull-right">
          Gentelella - Bootstrap Admin Template by <a href="https://colorlib.com">Colorlib</a>
        </div>
        <div class="clearfix"></div>
      </footer>
      <!-- /footer content -->
    </div>
  </div>
  <!-- jQuery -->
  <script src="../vendors/jquery/dist/jquery.min.js"></script>
  <!-- Bootstrap -->
  <script src="../vendors/bootstrap/dist/js/bootstrap.min.js"></script>
  <!-- FastClick -->
  <script src="../vendors/fastclick/lib/fastclick.js"></script>
  <!-- NProgress -->
  <script src="../vendors/nprogress/nprogress.js"></script>
  <!-- Chart.js -->
  <script src="../vendors/Chart.js/dist/Chart.min.js"></script>
  <!-- gauge.js -->
  <script src="../vendors/gauge.js/dist/gauge.min.js"></script>
  <!-- bootstrap-progressbar -->
  <script src="../vendors/bootstrap-progressbar/bootstrap-progressbar.min.js"></script>
  <!-- iCheck -->
  <script src="../vendors/iCheck/icheck.min.js"></script>
  <!-- Skycons -->
  <script src="../vendors/skycons/skycons.js"></script>
  <!-- Flot -->
  <script src="../vendors/Flot/jquery.flot.js"></script>
  <script src="../vendors/Flot/jquery.flot.pie.js"></script>
  <script src="../vendors/Flot/jquery.flot.time.js"></script>
  <script src="../vendors/Flot/jquery.flot.stack.js"></script>
  <script src="../vendors/Flot/jquery.flot.resize.js"></script>
  <!-- Flot plugins -->
  <script src="../vendors/flot.orderbars/js/jquery.flot.orderBars.js"></script>
  <script src="../vendors/flot-spline/js/jquery.flot.spline.min.js"></script>
  <script src="../vendors/flot.curvedlines/curvedLines.js"></script>
  <!-- DateJS -->
  <script src="../vendors/DateJS/build/date.js"></script>
  <!-- JQVMap -->
  <script src="../vendors/jqvmap/dist/jquery.vmap.js"></script>
  <script src="../vendors/jqvmap/dist/maps/jquery.vmap.world.js"></script>
  <script src="../vendors/jqvmap/examples/js/jquery.vmap.sampledata.js"></script>
  <!-- bootstrap-daterangepicker -->
  <script src="../vendors/moment/min/moment.min.js"></script>
  <script src="../vendors/bootstrap-daterangepicker/daterangepicker.js"></script>
  <!-- Custom Theme Scripts -->
  <script src="../build/js/custom.min.js"></script>
  <script type="text/javascript">
    //Replay
    var log_data = <%- log_JSON%>;
    var send_information = new Array()
    var label = new Array()
    var start_node = new Array()
    var end_node = new Array()
    var workernum = new Array()
    var send_inform = new Array();
    var interval_handle
    var global_i = 0
    var global_step = 0
    var log_array = new Array()

    //handle log_data
    log_array = log_data.split('\n')
    if (log_array[log_array.length - 1] == "") {
      log_array.length = log_array.length - 1
    }
    //handle send_information
    for (var k = 0; k < 40; k++) {
      send_inform[k] = new Array();
      for (var j = 0; j < 40; j++) {
        send_inform[k][j] = 0;
      }
    }
    var maxstep = 0
    send_information = <%- send%>;
    if (send_information[send_information.length - 1] == '') {
      send_information.length = send_information.length - 1
    }
    for (var i = 0; i < send_information.length; i++) {
      workernum = send_information[i].match(/\d+/g)
      label[i] = parseInt(workernum[0])
      start_node[i] = parseInt(workernum[1])
      end_node[i] = parseInt(workernum[2])
      if (label[i] > maxstep) {
        maxstep = label[i]
      }
    }

    function play() {
      for (var k = 0; k < 40; k++) {
        for (var j = 0; j < 40; j++) {
          send_inform[k][j] = 0;
        }
      }
      //the file is begin with 1
      for (var j = 0; j < label.length; j++) {
        if (label[j] == global_i) {
          send_inform[start_node[j]][end_node[j]] = 1
          send_inform[end_node[j]][start_node[j]] = 1
        }
      }
      svg.selectAll(".link")
        .attr("stroke", function(d, i) {
          if (send_inform[d[0].id][d[2].id] == 1) {
            return "#48D1CC"
          } else return "#bbb"
        });
      var global_i_end = global_i + 1
      var str_2 = "super step " + global_i_end + " time record"
      if (global_i == 0) {
        $("p#console_log").html("log begin")
        for (var loop = 0; loop < log_array.length; loop++) {
          var each_str = log_array[loop]
          if (each_str.indexOf(str_2) == -1) {
            $("p#console_log").append("<br />" + each_str)
          } else {
            global_step = loop
            break;
          }
        }
        if (maxstep == 1) {
          for (var loop = global_step; loop < log_array.length; loop++) {
            var each_str = log_array[loop]
            $("p#console_log").append("<br />" + each_str)
          }
        }
      } else if (global_i == maxstep) {
        for (var loop = global_step; loop < log_array.length; loop++) {
          var each_str = log_array[loop]
          $("p#console_log").append("<br />" + each_str)
        }
      } else {
        for (var loop = global_step; loop < log_array.length; loop++) {
          var each_str = log_array[loop]
          if (each_str.indexOf(str_2) == -1) {
            $("p#console_log").append("<br />" + each_str)
          } else {
            global_step = loop;
            break;
          }
        }
      }
      var div = document.getElementById('scroll');
      div.scrollTop = div.scrollHeight;
      if (global_i < maxstep) {
        global_i++
      } else {
        svg.selectAll(".link")
          .attr("stroke", "#bbb")
        clearInterval(interval_handle)
        interval_handle = undefined

        document.getElementById("start_pause").src = "images/play.png";
        document.getElementById("start_pause").onclick = function() {
          start()
        }
      }
    }

    function start() {
      if (interval_handle == undefined) {
        global_i = 0
        var speed_ = document.getElementById("speed").value
        interval_handle = setInterval("play()", speed_)

        document.getElementById("start_pause").src = "images/stop.png";
        document.getElementById("start_pause").onclick = function() {
          stop1()
        }
      } else {
        var speed_ = document.getElementById("speed").value
        interval_handle = setInterval("play()", speed_)
        document.getElementById("start_pause").src = "images/stop.png";
        document.getElementById("start_pause").onclick = function() {
          stop1()
        }

      }
    }

    function stop1() {
      if (interval_handle != undefined) {
        clearInterval(interval_handle)
        document.getElementById("start_pause").src = "images/play.png";
        document.getElementById("start_pause").onclick = function() {
          start()
        }
      }
    }

    function restart1() {
      if (interval_handle != undefined) {
        clearInterval(interval_handle);
        var speed_ = document.getElementById("speed").value
        global_i = 0
        interval_handle = setInterval("play()", speed_)

        document.getElementById("start_pause").src = "images/stop.png";
        document.getElementById("start_pause").onclick = function() {
          stop1()
        }
      } else {
        global_i = 0
        var speed_ = document.getElementById("speed").value
        interval_handle = setInterval("play()", speed_)

        document.getElementById("start_pause").src = "images/stop.png";
        document.getElementById("start_pause").onclick = function() {
          stop1()
        }
      }
    }
    /*var sessionId = "<%=sessionID%>"
    var algo = "<%=algo%>"
    if ((algo != "sssp") && (algo != "cc") && (algo != "sim")) {
        algo = "sssp"
    }*/
    $(document).ready(function() {
      start()
    })
  </script>
</body>

</html>
<!--footerend